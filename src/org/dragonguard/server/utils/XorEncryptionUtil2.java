package org.dragonguard.server.utils;

import java.util.Base64;

public class XorEncryptionUtil2 {

	public final static int Key[] = {-30, -74, -91, -30, -101, -70, -30, -110, -83, -30, -105, -101, -30, -112, -96, -30, -70, -102, -30, -104, -105, -30, -111, -89, -30, -82, -127, -30, -102, -85, -30, -71, -80, -30, -114, -114, -30, -65, -108, -30, -115, -110, -30, -89, -121, -30, -105, -128, -30, -104, -99, -30, -91, -92, -30, -76, -71, -30, -93, -117, -30, -116, -125, -30, -78, -85, -30, -78, -105, -30, -98, -89, -30, -89, -101, -30, -73, -122, -30, -95, -118, -30, -122, -117, -30, -83, -124, -30, -108, -110, -30, -84, -127, -30, -73, -85, -30, -125, -105, -30, -108, -93, -30, -77, -95, -30, -109, -93, -30, -82, -94, -30, -93, -82, -30, -83, -111, -30, -69, -80, -30, -104, -68, -30, -70, -91, -30, -67, -78, -30, -80, -117, -30, -107, -80, -30, -124, -87, -30, -81, -74, -30, -100, -65, -30, -113, -94, -30, -107, -118, -30, -79, -123, -30, -78, -125, -30, -117, -95, -30, -120, -91, -30, -128, -95, -30, -124, -86, -30, -85, -75, -30, -88, -66, -30, -103, -110, -30, -128, -111, -30, -128, -95, -30, -75, -95, -30, -72, -128, -30, -115, -94, -30, -79, -77, -30, -94, -113, -30, -84, -119, -30, -126, -95, -30, -97, -95, -30, -123, -100, -30, -77, -79, -30, -100, -65, -30, -79, -128, -30, -103, -80, -30, -84, -119, -30, -94, -97, -30, -80, -66, -30, -78, -97, -30, -103, -87, -30, -114, -65, -30, -114, -106, -30, -123, -110, -30, -102, -96, -30, -105, -69, -30, -116, -74, -30, -72, -93, -30, -127, -124, -30, -120, -68, -30, -87, -110, -30, -96, -83, -30, -66, -93, -30, -81, -68, -30, -90, -74, -30, -78, -87, -30, -108, -127, -30, -68, -118, -30, -83, -100, -30, -95, -122, -30, -72, -128, -30, -107, -105, -30, -74, -66, -30, -86, -87, -30, -106, -66, -30, -118, -107, -30, -100, -68, -30, -89, -77, -30, -93, -114, -30, -73, -104, -30, -126, -125, -30, -105, -78, -30, -95, -116, -30, -108, -82, -30, -95, -118, -30, -94, -68, -30, -120, -125, -30, -99, -70, -30, -73, -101, -30, -92, -88, -30, -83, -66, -30, -115, -94, -30, -118, -108, -30, -69, -116, -30, -96, -114, -30, -100, -102, -30, -68, -128, -30, -90, -68, -30, -115, -67, -30, -102, -115, -30, -80, -113, -30, -102, -67, -30, -72, -95, -30, -109, -70, -30, -80, -105, -30, -112, -65, -30, -99, -106, -30, -110, -74, -30, -101, -78, -30, -123, -98, -30, -73, -101, -30, -79, -80, -30, -94, -125, -30, -115, -73, -30, -126, -105, -30, -68, -65, -30, -95, -115, -30, -120, -113, -30, -70, -123, -30, -101, -112, -30, -126, -116, -30, -102, -118, -30, -127, -101, -30, -117, -104, -30, -109, -96, -30, -65, -128, -30, -91, -126, -30, -114, -109, -30, -111, -126, -30, -94, -100, -30, -98, -106, -30, -123, -85, -30, -70, -121, -30, -78, -78, -30, -80, -97, -30, -81, -100, -30, -104, -104, -30, -122, -75, -30, -109, -74, -30, -84, -81, -30, -119, -91, -30, -81, -81, -30, -95, -73, -30, -82, -120, -30, -107, -108, -30, -124, -120, -30, -122, -77, -30, -108, -128, -30, -112, -68, -30, -105, -69, -30, -93, -70, -30, -117, -107, -30, -103, -108, -30, -116, -82, -30, -111, -128, -30, -111, -94, -30, -98, -92, -30, -98, -75, -30, -107, -73, -30, -71, -101, -30, -68, -97, -30, -106, -113, -30, -97, -99, -30, -104, -98, -30, -81, -125, -30, -127, -108, -30, -124, -74, -30, -69, -114, -30, -92, -85, -30, -107, -71, -30, -80, -101, -30, -112, -88, -30, -117, -84, -30, -101, -126, -30, -122, -68, -30, -111, -88, -30, -75, -112, -30, -127, -108, -30, -118, -94, -30, -116, -106, -30, -66, -117, -30, -91, -96, -30, -120, -113, -30, -73, -86, -30, -104, -122, -30, -94, -124, -30, -113, -120, -30, -110, -117, -30, -68, -111, -30, -65, -105, -30, -114, -123, -30, -69, -115, -30, -111, -125, -30, -106, -66, -30, -93, -107, -30, -107, -77, -30, -73, -114, -30, -76, -94, -30, -91, -91, -30, -116, -125, -30, -110, -93, -30, -113, -67, -30, -84, -103, -30, -126, -89, -30, -94, -78, -30, -78, -100, -30, -108, -65, -30, -110, -99, -30, -68, -76, -30, -94, -118, -30, -111, -95, -30, -79, -99, -30, -80, -86, -30, -89, -89, -30, -117, -110, -30, -121, -85, -30, -112, -90, -30, -75, -116, -30, -83, -122, -30, -123, -97, -30, -127, -107, -30, -103, -79, -30, -118, -103, -30, -75, -89, -30, -80, -110, -30, -103, -124, -30, -97, -92, -30, -95, -69, -30, -123, -65, -30, -85, -107, -30, -110, -115, -30, -99, -90, -30, -84, -106, -30, -73, -122, -30, -101, -122, -30, -94, -77, -30, -88, -94, -30, -125, -91, -30, -68, -73, -30, -96, -69, -30, -100, -87, -30, -66, -81, -30, -104, -96, -30, -87, -100, -30, -105, -80, -30, -76, -125, -30, -122, -92, -30, -112, -122, -30, -111, -97, -30, -66, -67, -30, -98, -65, -30, -71, -76, -30, -106, -101, -30, -69, -67, -30, -95, -82, -30, -118, -89, -30, -66, -90, -30, -87, -126, -30, -73, -103, -30, -121, -96, -30, -99, -100, -30, -118, -80, -30, -82, -98, -30, -84, -127, -30, -122, -65, -30, -89, -104, -30, -78, -101, -30, -80, -85, -30, -78, -72, -30, -114, -66, -30, -99, -104, -30, -127, -128, -30, -79, -107, -30, -84, -121, -30, -105, -65, -30, -88, -110, -30, -78, -112, -30, -68, -85, -30, -89, -120, -30, -85, -88, -30, -103, -97, -30, -101, -95, -30, -70, -115, -30, -100, -95, -30, -78, -85, -30, -72, -100, -30, -72, -98, -30, -119, -81, -30, -68, -93, -30, -117, -113, -30, -88, -89, -30, -117, -77, -30, -110, -124, -30, -113, -116, -30, -110, -101, -30, -93, -65, -30, -75, -114, -30, -99, -69, -30, -89, -81, -30, -97, -89, -30, -79, -114, -30, -88, -71, -30, -96, -65, -30, -111, -92, -30, -80, -115, -30, -74, -67, -30, -120, -86, -30, -81, -94, -30, -90, -124, -30, -89, -79, -30, -111, -81, -30, -105, -77, -30, -114, -122, -30, -71, -81, -30, -121, -84, -30, -125, -65, -30, -103, -111, -30, -124, -127, -30, -86, -108, -30, -111, -125, -30, -105, -85, -30, -74, -67, -30, -89, -102, -30, -68, -123, -30, -101, -79, -30, -83, -73, -30, -83, -89, -30, -82, -78, -30, -115, -107, -30, -95, -126, -30, -73, -91, -30, -90, -120, -30, -124, -125, -30, -93, -125, -30, -119, -107, -30, -94, -127, -30, -66, -81, -30, -125, -115, -30, -98, -71, -30, -77, -82, -30, -111, -78, -30, -89, -128, -30, -98, -105, -30, -113, -96, -30, -90, -102, -30, -125, -97, -30, -83, -99, -30, -110, -119, -30, -73, -93, -30, -128, -115, -30, -117, -75, -30, -84, -72, -30, -121, -91, -30, -126, -106, -30, -110, -103, -30, -128, -109, -30, -75, -104, -30, -91, -86, -30, -77, -125, -30, -96, -113, -30, -88, -78, -30, -108, -105, -30, -125, -69, -30, -83, -73, -30, -112, -104, -30, -124, -103, -30, -128, -127, -30, -72, -108, -30, -120, -85, -30, -107, -94, -30, -104, -78, -30, -96, -108, -30, -112, -68, -30, -82, -118, -30, -65, -103, -30, -87, -114, -30, -93, -125, -30, -66, -69, -30, -107, -78, -30, -124, -109, -30, -107, -78, -30, -90, -70, -30, -77, -77, -30, -98, -74, -30, -97, -121, -30, -104, -114, -30, -111, -71, -30, -99, -70, -30, -86, -106, -30, -74, -118, -30, -102, -103, -30, -66, -67, -30, -73, -120, -30, -89, -103, -30, -107, -86, -30, -81, -76, -30, -127, -111, -30, -128, -97, -30, -101, -98, -30, -94, -113, -30, -84, -119, -30, -66, -73, -30, -121, -67, -30, -73, -82, -30, -73, -86, -30, -110, -69, -30, -75, -92, -30, -94, -122, -30, -77, -128, -30, -107, -116, -30, -120, -94, -30, -97, -77, -30, -82, -86, -30, -65, -81, -30, -76, -86, -30, -99, -104, -30, -69, -121, -30, -110, -119, -30, -127, -124, -30, -85, -83, -30, -80, -110, -30, -85, -76, -30, -100, -76, -30, -105, -91, -30, -81, -111, -30, -122, -90, -30, -94, -85, -30, -81, -79, -30, -68, -109, -30, -99, -126, -30, -98, -81, -30, -100, -107, -30, -120, -101, -30, -114, -111, -30, -119, -125, -30, -123, -110, -30, -125, -73, -30, -98, -105, -30, -89, -111, -30, -127, -112, -30, -85, -77, -30, -88, -67, -30, -107, -88, -30, -127, -112, -30, -96, -66, -30, -74, -92, -30, -71, -101, -30, -66, -127, -30, -126, -90, -30, -111, -125, -30, -97, -106, -30, -117, -101, -30, -127, -87, -30, -77, -65, -30, -99, -114, -30, -78, -88, -30, -86, -119, -30, -75, -93, -30, -85, -116, -30, -92, -65, -30, -110, -111, -30, -108, -127, -30, -91, -70, -30, -113, -92, -30, -84, -90, -30, -97, -109, -30, -82, -106, -30, -118, -119, -30, -91, -122, -30, -84, -69, -30, -72, -108, -30, -68, -110, -30, -82, -82, -30, -105, -127, -30, -121, -88, -30, -104, -91, -30, -118, -107, -30, -124, -73, -30, -77, -65, -30, -127, -107, -30, -102, -66, -30, -65, -92, -30, -122, -88, -30, -75, -68};
	
    private static byte[] xor(byte[] b) {
    	int len = b.length;
    	int keyLen = Key.length;

    	byte[] result = new byte[len];
    	for(int i=0;i<len;i++) {
    		result[i] = (byte)(b[i] ^ Key[i % keyLen]);
    	}

    	return result;
    }
    
    public static String encryptXORBase64(String s) {
    	return Base64.getEncoder().encodeToString(xor(s.getBytes()));
    }
    
    public static String decryptXORBase64(String s) {
    	return new String(xor(Base64.getDecoder().decode(s)));
    }
    
    public static String XOR(String s) {
    	return new String(xor(s.getBytes()));
    }
}
